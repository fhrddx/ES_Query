@{
    Layout = null;
}
<html>
<head>
    <link rel="stylesheet" type="text/css" href="https://zijieke.com/semantic-ui/dist/semantic.css">
    <script type="text/javascript" src="~/Scripts/vue/vue.min.js"></script>
    <script type="text/javascript" src="~/Scripts/vue/axios.min.js"></script>
    <script type="text/javascript" src="~/Scripts/vue/polyfill.min.js"></script>
    <script type="text/javascript" src="http://datapc.eastmoney.com/emdatacenter/abase/js/echarts.min.js"></script>
    <style type="text/css">
        [v-cloak] {
            display: none;
        }
    </style>
</head>
<body>
    <div style="width:1200px;margin: 5px auto;padding:10px" id="vue-area" v-cloak>
        <div class="ui raised segments">
            <h4 style="margin-left:20px;margin-top:15px">API访问量排名&nbsp;&nbsp;（{{period.from}}&nbsp;~&nbsp;{{period.to}}）</h4>
            <div class="ui horizontal segments">
                <div class="ui segment">
                    <p>
                        <table class="ui basic right aligned table">
                            <thead>
                                <tr>
                                    <th class="left aligned">ApiName</th>
                                    <th>调用次数</th>
                                </tr>
                            </thead>
                            <tbody v-if="apiNameList && apiNameList.length > 0">
                                <tr v-for="(item,index) in apiNameList">
                                    <td class="left aligned">{{item.ApiName}}</td>
                                    <td>{{item.Total}}</td>
                                </tr>
                            </tbody>
                        </table>
                    </p>
                </div>
                <div class="ui segment">
                    <p>
                        <table class="ui basic right aligned table">
                            <thead>
                                <tr>
                                    <th class="left aligned">ApiKey</th>
                                    <th>调用次数</th>
                                </tr>
                            </thead>
                            <tbody v-if="apiKeyList && apiKeyList.length > 0">
                                <tr v-for="(item,index) in apiKeyList">
                                    <td class="left aligned">{{item.Key}}</td>
                                    <td>{{item.Total}}</td>
                                </tr>
                            </tbody>
                        </table>
                    </p>
                </div>
            </div>
        </div>

        <div class="ui raised segments">
            <h4 style="margin-left:20px;margin-top:15px">API压力时段&nbsp;&nbsp;（{{period.from}}&nbsp;~&nbsp;{{period.to}}）</h4>
            <div style="height:300px" id="chart">
            </div>
        </div>

        <div class="ui raised segments">
            <h4 style="margin-left:20px;margin-top:15px">API压力指数&nbsp;&nbsp;（{{period.from}}&nbsp;~&nbsp;{{period.to}}）</h4>
            <div style="padding:10px;padding-top:0;">
                <table class="ui basic right aligned table">
                    <thead>
                        <tr>
                            <th class="left aligned">Key</th>
                            <th>Api</th>
                            <th>调用次数</th>
                            <th>缓存读取次数</th>
                            <th>压力指数</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="(item,index) in apiPressureList">
                            <td class="left aligned">{{item.Key}}</td>
                            <td>{{item.ApiName}}</td>
                            <td v-bind:class="{'negative':item.Total>20 && item.Pressure>49}">{{item.Total}}</td>
                            <td v-bind:class="{'negative':item.Total>20 && item.Pressure>49}">{{item.Cache}}</td>
                            <td v-bind:class="{'negative':item.Total>20 && item.Pressure>49}">{{item.Pressure.toFixed(2)}}%</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        new Vue({
            el: '#vue-area',
            data: function data() {
                return {
                    apiNameList: [],
                    apiKeyList: [],
                    apiPressureList: [],
                    period: {
                        from: '2020-06-16',
                        to: '2020-06-16'
                    }
                }
            },
            methods: {
                rankingByApiName: function rankingByApiName() {
                    let input = {
                        from: this.period.from,
                        to: this.period.to,
                        take: 10
                    };
                    var _this = this;
                    axios.get('/home/ApiNameRanking', {
                        params: input
                    }).then(function (response) {
                        var result = response.data;
                        if (result && result.list) {
                            _this.apiNameList = result.list;
                        }
                    });
                },
                rankingByApiKey: function rankingByApiKey() {
                    let input = {
                        from: this.period.from,
                        to: this.period.to,
                        take: 10
                    };
                    var _this = this;
                    axios.get('/home/ApiKeyRanking', {
                        params: input
                    }).then(function (response) {
                        var result = response.data;
                        if (result && result.list) {
                            _this.apiKeyList = result.list;
                        }
                    });
                },
                rankingByPressure: function rankingByPressure() {
                    let input = {
                        from: this.period.from,
                        to: this.period.to,
                        take: 500
                    };
                    var _this = this;
                    axios.get('/home/ApiPressureRanking', {
                        params: input
                    }).then(function (response) {
                        var result = response.data;
                        if (result && result.list) {
                            _this.apiPressureList = result.list;
                        }
                    });
                },
                timeChart: function timeChart() {
                    let input = {
                        from: this.period.from,
                        to: this.period.to
                    };
                    axios.get('/home/TimeList', {
                        params: input
                    }).then(function (response) {
                        var result = response.data;
                        var category = result.category;
                        for (var i = 0; i < 24; i++) {
                            category[i] = category[i] + "时";
                           //category[i] = category[i] + ":00 至 " + category[i] + ":59";
                        }
                        draw(result.category,result.data);
                    });
                }
            },
            mounted: function mounted() {
                this.rankingByApiName();
                this.rankingByApiKey();
                this.rankingByPressure();
                this.timeChart();
            }
        });

        function draw(date,data) {
            option = {
                tooltip: {
                    trigger: 'axis',
                    position: function (pt) {
                        return [pt[0], '10%'];
                    }
                },
                title: {
                    left: 'center',
                    text: 'Api各时段访问次数',
                },
                toolbox: {
                    feature: {
                        dataZoom: {
                            yAxisIndex: 'none'
                        },
                        restore: {},
                        saveAsImage: {}
                    }
                },
                xAxis: {
                    type: 'category',
                    boundaryGap: false,
                    data: date
                },
                yAxis: {
                    type: 'value',
                    boundaryGap: [0, '100%']
                },
                dataZoom: [{
                    type: 'inside',
                    start: 0,
                    end: 10
                }, {
                    start: 0,
                    end: 10,
                    handleIcon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4v1.3h1.3v-1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z',
                    handleSize: '80%',
                    handleStyle: {
                        color: '#fff',
                        shadowBlur: 3,
                        shadowColor: 'rgba(0, 0, 0, 0.6)',
                        shadowOffsetX: 2,
                        shadowOffsetY: 2
                    }
                }],
                series: [
                    {
                        name: '调用次数',
                        type: 'line',
                        smooth: true,
                        symbol: 'none',
                        sampling: 'average',
                        itemStyle: {
                            color: 'rgb(255, 70, 131)'
                        },
                        areaStyle: {
                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{
                                offset: 0,
                                color: 'rgb(255, 158, 68)'
                            }, {
                                offset: 1,
                                color: 'rgb(255, 70, 131)'
                            }])
                        },
                        data: data
                    }
                ]
            };
            var myChart = echarts.init(document.querySelector("#chart"));
            myChart.setOption(option);
            window.onresize = myChart.resize;
        }
    </script>
</body>
</html>

